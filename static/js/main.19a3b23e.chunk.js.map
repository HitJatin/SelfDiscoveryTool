{"version":3,"sources":["Components/Header.js","Components/ButtonGroup.js","Components/PopUp.js","Components/Submit.js","Components/DragDrop.js","Components/TableSet.js","App.js","serviceWorker.js","env.js","index.js"],"names":["Header","props","className","Navbar","fixed","dark","color","NavbarBrand","id","src","logo","alt","title","height","width","DataButton","useState","dropdownOpen","setOpen","check","ButtonDropdown","isOpen","toggle","Button","idButton","onClick","value","DropdownToggle","caret","DropdownMenu","DropdownItem","header","meaning","DataSet","i","item","this","key","Property","Meaning","enablemeaning","rows","length","Level","String","level","push","renderButton","Component","PopUp","Modal","ModalHeader","ModalBody","msg","ModalFooter","Submit","text","onclick","variant","size","block","DragDrop","list","data","setList","ondrag","map","cbelief","belief","TableSet","k","show","test","headtest","heads","scope","Table","striped","App","state","modal","selected","config","titlehead","initial","Welcome","selectedoutof","buttongroup","dragdrop","tableset","submit","drgdrpset","bind","updateSelection","levelCheck","apiUrl","fetch","then","response","json","setState","$","attr","icon","branding","name","property","document","getElementById","levelDetails","rule","Status","count","style","backgroundColor","testItem","Object","assign","alert","updateStatusLevel","Ordering","Result","parseInt","btngrp","drgdrp","tblst","sbmt","display","dropdown","newState","tableheads","meaning_in_table","temp","outoftext","popup","Boolean","window","location","hostname","match","site_config","category","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.19a3b23e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar,NavbarBrand} from 'reactstrap';\r\nconst Header = (props) => {\r\n    return (<div className=\"Header\" >\r\n    <Navbar fixed=\"top\" dark color =\"dark\" >\r\n      <div className=\"container\">\r\n        <NavbarBrand ><div id=\"logo\"><img src={props.logo} alt={props.title} height=\"70\" width=\"70\" /></div><div id=\"heading\">{props.title}</div></NavbarBrand>\r\n      </div>\r\n    </Navbar>\r\n</div>);\r\n}\r\n\r\nexport default Header;","import React,{Component,useState} from 'react';\r\nimport '../App.css'\r\nimport {Button,ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nfunction DataButton(props) {\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n    if(props.check)\r\n    return (\r\n      <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n        <Button className=\"itemButton\" id={props.idButton} onClick={props.onClick}>{props.value}</Button>\r\n        <DropdownToggle caret color=\"primary\" />\r\n        <DropdownMenu>\r\n            <DropdownItem header>{props.meaning}</DropdownItem>\r\n        </DropdownMenu>\r\n    </ButtonDropdown>\r\n    );\r\n    else\r\n    return (\r\n      <Button className=\"itemButton\" id={props.idButton} onClick={props.onClick}>{props.value}</Button>\r\n    );\r\n  }\r\n  class DataSet extends Component {\r\n    renderButton(i){\r\n      let item=this.props.item;\r\n      let idButton=\"qual_\"+i;\r\n      return (\r\n        <DataButton\r\n            key={idButton}\r\n            idButton={idButton}\r\n            value={item[i].Property}\r\n            meaning={item[i].Meaning}\r\n            check={this.props.enablemeaning}\r\n            onClick={() => this.props.onClick(i)}\r\n          />\r\n      )\r\n    }\r\n    render() {\r\n      const rows=[];\r\n      var i;    \r\n      for (i=0;i<this.props.item.length;i++)\r\n        {\r\n          if(this.props.item[i].Level===String(this.props.level)){\r\n              rows.push(\r\n              this.renderButton(i)\r\n              );\r\n          }\r\n        }\r\n        return (<div className=\"itemGroup\">{rows}</div>)\r\n    }\r\n  }\r\n\r\nexport default DataSet;","import React,{Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nclass PopUp extends Component{\r\n    render(){\r\n        return (\r\n        <Modal isOpen={this.props.isOpen} toggle={this.props.toggle}>\r\n          <ModalHeader><img src={this.props.logo} alt={this.props.title} height=\"70\" width=\"70\" />{this.props.title}</ModalHeader>\r\n          <ModalBody>{this.props.msg}</ModalBody>\r\n          <ModalFooter>\r\n            <Button color='primary' onClick={this.props.toggle}>OK</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopUp;","import React,{Component } from 'react';\r\nimport '../App.css';\r\nimport { Button,Navbar} from 'reactstrap';\r\n\r\nclass Submit extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Footer\">\r\n                <Navbar fixed=\"bottom\" dark color=\"dark\" text=\"light\">\r\n                    <Button onClick={this.props.onclick} variant=\"dark\" size=\"lg\" block>Submit {this.props.msg}</Button>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Submit;","import React, { Component } from \"react\";\r\nimport '../App.css'\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nclass DragDrop extends Component{\r\n  render() {\r\n    return (\r\n      <div className=\"dragdrop\">\r\n      <ReactSortable\r\n        list={this.props.data}\r\n        setList={this.props.ondrag}\r\n      >\r\n        {this.props.data.map(item => (\r\n          <div key={item.cbelief} className=\"drgdrpdiv\">{item.belief}</div>\r\n        ))}\r\n      </ReactSortable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DragDrop;","import React,{Component } from 'react';\r\nimport '../App.css';\r\nimport {Table} from 'reactstrap';\r\nclass TableSet extends Component {\r\n    render() {\r\n      var i,k=1,show=false;\r\n      const rows=[];\r\n      var test=\"\",headtest=\"\";\r\n      if(this.props.check){\r\n      show=true;\r\n      headtest=<th>{this.props.heads[1]}</th>;\r\n      }\r\n      for(i=0;i<this.props.data.length;i++){\r\n        if(show)\r\n        test=<td>{this.props.data[i].cbelief}</td>;\r\n          rows.push(\r\n            <tr key={i}>\r\n              <th scope=\"row\">{k}</th>\r\n              <td>{this.props.data[i].belief}</td>\r\n              {test}\r\n            </tr>\r\n          )\r\n          k++;\r\n      }\r\n      return (<div className=\"tableset\">\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>{this.props.heads[0]}</th>\r\n            {headtest}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TableSet;","import React,{Component } from 'react';\r\nimport './App.css';\r\nimport $ from 'jquery';\r\nimport Header from './Components/Header';\r\nimport DataSet from './Components/ButtonGroup';\r\nimport PopUp from './Components/PopUp';\r\nimport Submit from './Components/Submit';\r\nimport DragDrop from './Components/DragDrop';\r\nimport TableSet from './Components/TableSet';\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: true,\r\n      item:[],\r\n      selected:0,\r\n      config:{},\r\n      level:1,\r\n      titlehead:props.initial.heads.Welcome,\r\n      msg:\"\",\r\n      selectedoutof:\"\",\r\n      buttongroup:true,\r\n      dragdrop:false,\r\n      tableset:false,\r\n      submit:true,\r\n      drgdrpset:[]\r\n    };\r\n    this.toggle=this.toggle.bind(this);\r\n    this.updateSelection=this.updateSelection.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n    this.levelCheck = this.levelCheck.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n    var temp=\"\",outoftext=\"\";\r\n    if(state.level===1)\r\n    temp=props.initial.popup[0];\r\n    else if(state.level===(props.initial.levelDetails.length+1))\r\n    temp=props.initial.popup[1];\r\n    else\r\n    temp=\"Select \"+props.initial.levelDetails[state.level-1].rule+\" \"+props.initial.levelDetails[state.level-1].count+\" \"+props.initial.title;\r\n    if(state.level===1)\r\n    outoftext=state.selected+\"/\"+state.item.length;\r\n    else if(state.level<=props.initial.levelDetails.length)\r\n    outoftext=state.selected+\"/\"+props.initial.levelDetails[state.level-1].count\r\n    return {\r\n      config:props.initial,\r\n      msg:temp,\r\n      selectedoutof:outoftext\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const apiUrl = this.props.initial.apiUrl;\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({item:data}));\r\n    $(\"#favlogo\").attr('href',this.state.config.icon);\r\n    $(\"#title\").text(this.state.config.branding.name);\r\n  }\r\n  toggle(){\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n  updateSelection(i){\r\n    let property = document.getElementById('qual_'+i);\r\n    if(this.state.config.levelDetails[this.state.level-1].rule===\"exactly\" && this.state.item[i].Status==='0' && this.state.config.levelDetails[this.state.level-1].count===this.state.selected){\r\n      alert(\"You can't select more than \"+this.state.selected+\" beliefs\");\r\n      return;\r\n    }\r\n    else if(this.state.item[i].Status==='0')\r\n    {\r\n      property.style.backgroundColor=\"#00cc00\";\r\n      let testItem = Object.assign({}, this.state);\r\n      testItem.item[i].Status = \"1\";\r\n      testItem.selected+=1;\r\n      this.setState(testItem);\r\n    }\r\n    else if(this.state.item[i].Status==='1')\r\n    {\r\n      property.style.backgroundColor=\"#0000FF\";\r\n      let testItem = Object.assign({}, this.state);\r\n      testItem.item[i].Status = \"0\";\r\n      testItem.selected-=1;\r\n      this.setState(testItem);\r\n    }\r\n  }\r\n  levelCheck(){\r\n    if(this.state.config.levelDetails[this.state.level-1].rule===\"minimum\" && this.state.config.levelDetails[this.state.level-1].count<=this.state.selected)\r\n    {\r\n         return \"true\";\r\n    }\r\n     else if(this.state.config.levelDetails[this.state.level-1].rule===\"exactly\" && this.state.config.levelDetails[this.state.level-1].count===this.state.selected)\r\n    {\r\n        return \"true\";\r\n    }\r\n    else\r\n    return \"false\";\r\n  }\r\n  submit(){\r\n    var i;\r\n    if(this.state.level<this.state.config.levelDetails.length){\r\n      if (this.levelCheck()===\"true\")\r\n      {                                         \r\n        this.updateStatusLevel();\r\n      }\r\n    }\r\n    else if(this.state.level===this.state.config.levelDetails.length)\r\n    {\r\n      if (this.levelCheck()===\"true\")\r\n      var testItem = Object.assign({}, this.state);\r\n        testItem.buttongroup= false;\r\n        testItem.titlehead=testItem.config.heads.Ordering;\r\n        testItem.dragdrop=true;\r\n        testItem.level+=1;\r\n        testItem.modal=true;\r\n        for(i=0;i<testItem.item.length;i++)\r\n        {\r\n          if(testItem.item[i].Status==='1')\r\n          {\r\n             testItem.drgdrpset.push(\r\n               {\"belief\":testItem.item[i].Property,\"cbelief\":testItem.item[i].Meaning}\r\n             )\r\n          }\r\n        }\r\n      this.setState(testItem);\r\n    }\r\n    else\r\n    {\r\n      testItem = Object.assign({}, this.state);\r\n      testItem.titlehead=testItem.config.heads.Result;\r\n      testItem.tableset= true;\r\n      testItem.dragdrop=false;\r\n      testItem.submit=false;\r\n      this.setState(testItem);\r\n    }\r\n  }\r\n  updateStatusLevel()\r\n  {\r\n    var i;\r\n    let testItem = Object.assign({}, this.state);\r\n    testItem.selected=0;\r\n    testItem.level+=1;\r\n    testItem.modal=true;\r\n    for(i=0;i<this.state.item.length;i++)\r\n    {\r\n      if(this.state.item[i].Status==='1')\r\n      {\r\n        testItem.item[i].Level=String(parseInt(testItem.item[i].Level)+1);\r\n        testItem.item[i].Status='0';\r\n        document.getElementById('qual_'+i).style.backgroundColor=\"#0000FF\";\r\n      }\r\n    }\r\n    this.setState(testItem);\r\n  }\r\n\r\n\r\n  render() {\r\n    let btngrp,drgdrp,tblst,sbmt;\r\n    if (this.state.buttongroup)\r\n      btngrp = <DataSet item={this.state.item} onClick={(i) => this.updateSelection(i)} level={this.state.level} enablemeaning={this.state.config.display.dropdown}/>;\r\n    if (this.state.dragdrop)\r\n      drgdrp= <DragDrop data={this.state.drgdrpset} ondrag={newState => {this.setState({ drgdrpset: newState })}}/>;\r\n    if (this.state.tableset)\r\n      tblst= <TableSet data={this.state.drgdrpset} heads={this.state.config.tableheads} check={this.state.config.display.meaning_in_table}/>;\r\n    if(this.state.submit)\r\n    sbmt= <Submit onclick={this.submit} msg={this.state.selectedoutof}/>\r\n    return (<div>\r\n    <Header logo={this.state.config.icon} title={this.state.titlehead}/>\r\n    <PopUp isOpen={this.state.modal} toggle={this.toggle} logo={this.props.initial.icon} title={this.state.config.branding.name} msg={this.state.msg}/>\r\n    {btngrp}\r\n    {drgdrp}\r\n    {tblst}\r\n    {sbmt}\r\n    </div>\r\n    )}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","var site_config;\r\nexport default site_config = {\r\n    branding: {\"name\" : \"Wings2Life\" },\r\n    heads:{\"Welcome\":\"Select your Beliefs\",\r\n    \"Ordering\":\"Prioritise your beliefs\",\r\n    \"Result\":\"Congratulations these are your Beliefs\"},\r\n    tableheads:[\"Belief\",\"Counter Belief\"],\r\n    display:{\"dropdown\":false, \"meaning_in_table\":false},\r\n    popup:[\r\n      \"Select as many beliefs as you resonate with\",\r\n      \"Use drag and drop to arrange these Beliefs in the order of importance they hold for you\"\r\n    ],\r\n    title: \"Beliefs\",\r\n    category: \"NCodes\",\r\n    icon: \"./wings2life.png\",\r\n    apiUrl: \"https://ix61k6qun9.execute-api.ap-southeast-1.amazonaws.com/prod/lifetoolsdataset?category=NCodes\",\r\n    levelDetails: [\r\n      {count:6 ,rule: \"minimum\" },{count:6, rule: \"exactly\"},\r\n                    {count:6, rule: \"exactly\"}]\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport site_config from './env';\r\nvar config;\r\nif (typeof site_config !== 'undefined') {\r\n  // the variable is defined\r\n  config = site_config;\r\n}\r\nelse{\r\n  config = {\r\n    branding: {\"name\" : \"SkillPill\" },\r\n    heads:{\"Welcome\":\"Select your Beliefs\",\r\n    \"Ordering\":\"Prioritise your beliefs\",\r\n    \"Result\":\"Congratulations these are your Beliefs\"},\r\n    tableheads:[\"Beliefs\",\"Counter Belief\"],\r\n    display:{\"dropdown\":true, \"meaning_in_table\":true},\r\n    popup:[\r\n      \"Select as many beliefs as you resonate with\",\r\n      \"Use drag and drop to arrange these Beliefs in the order of importance they hold for you\"\r\n    ],\r\n    title: \"Beliefs\",\r\n    category: \"Baselines\",\r\n    icon: \"./skillpill.png\",\r\n    apiUrl: \"https://ix61k6qun9.execute-api.ap-southeast-1.amazonaws.com/prod/lifetoolsdataset?category=Baselines\",\r\n    levelDetails: [\r\n      {count:5 ,rule: \"minimum\" },{count:4, rule: \"exactly\"},\r\n                    {count:3, rule: \"exactly\"}]\r\n};\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App initial={config}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}